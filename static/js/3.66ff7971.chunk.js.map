{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Components/Form/Form.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","toLowerCase","v4","options","buf","rnds","random","connect","dispatch","onSubmit","name","number","contactsOperations","addContact","useState","setName","setNumber","contacts","useSelector","contactsSelectors","getContacts","useDispatch","handleChange","e","target","reset","preventDefault","some","contact","alert","className","id","uuidv4","type","pattern","title","onChange","required","state","getVisibleContacts","onDeleteContact","deleteContact","map","onClick","getFilter","changeFilter","fetchContacts","useEffect","Container"],"mappings":"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","file":"static/js/3.66ff7971.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Form.css';\r\nimport { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handelSubmit} className=\"form\">\r\n      <label>\r\n        <span>Name</span>\r\n        <input\r\n          id={uuidv4()}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>Number</span>\r\n        <input\r\n          id={uuidv4()}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className=\"button\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import'./Contacts.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className=\"item\">\r\n          <p className=\"text\">{name}:</p>\r\n          <span>{number}</span>\r\n          <button className=\"button\" onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import './Filter.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className=\"text\">Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Container from '../Components/Container/Container';\r\nimport Form from '../Components/Form/Form';\r\nimport Contacts from '../Components/Contacts/Contacts';\r\nimport Filter from '../Components/Filter/Filter';\r\n// import AppBar from './Components/AppBar/AppBar';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { contactsOperations } from '../redux/contacts';\r\n// import { Switch, Route } from 'react-router-dom';\r\n// import HomeView from './views/HomeView';\r\n// import LoginView from './views/LoginView';\r\n\r\nfunction ContactsView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <Contacts />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactsView);\r\n// export default ContactsView;"],"sourceRoot":""}