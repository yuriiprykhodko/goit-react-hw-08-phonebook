{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-operations.js","redux/contacts/contacts-action.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-selection.js","Components/Container/Container.js","Components/Navigation/Navigation.js","Components/UserMenu/UserMenu.js","Components/UserMenu/default-icon2.png","Components/AuthNav/AuthNav.js","Components/AppBar.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getRefreshing","isRefreshing","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCarrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","addContact","number","dispatch","contact","deleteContact","id","delete","then","catch","error","fetchContacts","getContacts","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Container","children","className","Navigation","useSelector","authSelectors","to","exact","activeClassName","UserMenu","useDispatch","src","width","alt","type","variant","onClick","authOperations","AuthNav","AppBar","HomeView","lazy","LoginView","ContactsView","RegisterView","connect","contactsOperations","useEffect","fallback","path","redirectTo","restricted","createReducer","payload","combineReducers","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5379bc8.chunk.js","sourcesContent":["const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst getRefreshing = state => state.auth.isRefreshing;\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getIsLoggedIn,\r\n  getUserName,\r\n  getRefreshing,\r\n};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    // TODO: Add error.message\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    // TODO: Add error.message\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    // TODO: Add error.message\r\n  }\r\n});\r\n\r\nconst fetchCarrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\r\n  const state = thunkAPI.getState();\r\n  const persistedToken = state.auth.token;\r\n\r\n  if (persistedToken === null) {\r\n    return thunkAPI.rejectWithValue();\r\n  }\r\n  token.set(persistedToken);\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n    return data;\r\n  } catch (error) {\r\n    // TODO: Add error.message\r\n  }\r\n});\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { register, logIn, logOut, fetchCarrentUser };","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n} from './contacts-action';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3000';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  async dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n\r\n    // axios\r\n    //   .post('/contacts', contact)\r\n    //   .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    //   .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n\r\n  // try {\r\n  //   const { data } = await axios.delete(`/contacts/${id}`);\r\n  //   dispatch(deleteContactSuccess(data));\r\n  // } catch (error) {\r\n  //   dispatch(deleteContactError(error));\r\n  // }\r\n};\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, fetchContacts };","import { createSelector } from 'reselect';\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\n// const getVisibleContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getLoading,\r\n  getVisibleContacts,\r\n};","import PropTypes from 'prop-types';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className=\"Container\">{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport  './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav className=\"nav\">\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className=\"link\"\r\n        activeClassName=\"activeLink\"\r\n      >\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          className=\"link\"\r\n          activeClassName=\"activeLink\"\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authOperations, authSelectors } from '../../redux/auth';\r\nimport defaultAvatar from './default-icon2.png';\r\nimport  './UserMenu.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const avatar = defaultAvatar;\r\n  return (\r\n    <div className=\"user\">\r\n      <img className=\"img\" src={avatar} width=\"32\" alt=\"avatar\" />\r\n      <p className=\"text\">Welcome, {name}</p>\r\n      <button\r\n        className=\"button\"\r\n        type=\"button\"\r\n        variant=\"success\"\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Exit\r\n      </button>\r\n    </div>\r\n  );\r\n}","export default \"data:image/png;base64,\"","import { NavLink } from 'react-router-dom';\r\nimport  './AuthNav.css';\r\n\r\nconst AuthNav = () => (\r\n  <nav>\r\n    <NavLink to=\"/login\" className=\"link\" activeClassName=\"activeLink\">\r\n      Login\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/register\"\r\n      className=\"link\"\r\n      activeClassName=\"activeLink\"\r\n    >\r\n      Register\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default AuthNav;","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation/Navigation';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav/AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\nimport './AppBar.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  // console.log(isLoggedIn);\r\n  return (\r\n    <header className=\"container\">\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n      {/* <AuthNav />\r\n      <UserMenu /> */}\r\n    </header>\r\n  );\r\n}","import Container from './Components/Container';\nimport AppBar from './Components/AppBar';\nimport { connect } from 'react-redux';\nimport { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations } from './redux/contacts';\nimport { Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { authOperations, authSelectors } from './redux/auth';\nimport PrivateRoute from './Components/UserMenu/UserMenu';\nimport PublicRoute from './Components/UserMenu/UserMenu';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isRefreshing = useSelector(authSelectors.getRefreshing);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCarrentUser());\n  }, [dispatch]);\n\n  // useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    !isRefreshing && (\n      <Container>\n        <AppBar />\n\n        <Switch>\n          <Suspense fallback={<p>Loading...</p>}>\n            <PublicRoute exact path=\"/\">\n              <HomeView />\n            </PublicRoute>\n\n            <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n              <LoginView />\n            </PublicRoute>\n\n            <PublicRoute exact path=\"/register\" restricted>\n              <RegisterView />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsView />\n            </PrivateRoute>\n          </Suspense>\n        </Switch>\n      </Container>\n    )\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\nexport default connect(null, mapDispatchToProps)(App);\n// export default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n} from './contacts-action';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactError]: (_, { payload }) => payload,\r\n  [fetchContactRequest]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isRefreshing: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCarrentUser.pending](state) {\r\n      state.isRefreshing = true;\r\n    },\r\n    [authOperations.fetchCarrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isRefreshing = false;\r\n    },\r\n    [authOperations.fetchCarrentUser.rejected](state) {\r\n      state.isRefreshing = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authSlice from './auth/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authSlice),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n// const persistor = persistStore(store);\r\n\r\nexport const persistor = persistStore(store);\r\n// export default store;\r\n// eslint-disable-next-line no-undef","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\nimport {} from './redux/contacts/contacts-types';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}